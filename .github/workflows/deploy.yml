name: Deploy to Server

on:
  push:
    branches: [ "deploy" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        working-directory: ./backend
        run: |
          docker build -t devresmgr:${{ github.sha }} .

      - name: Save Docker image
        run: docker save -o image.tar devresmgr:${{ github.sha }}

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Transfer image to server
        run: scp image.tar ${{ secrets.SSH_USERNAME }}@${{ secrets.SERVER_IP }}:~/image.tar

      - name: Deploy to server
        run: |
          ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SERVER_IP }} <<EOF
            sudo docker load -i ~/image.tar
            sudo docker stop devresmgr || true
            sudo docker rm devresmgr || true
            sudo docker run -d --restart always --name devresmgr \
              -e TOKEN_SECRET="${{ secrets.TOKEN_SECRET }}" \
              -e DB_HOST="${{ secrets.DB_HOST }}" \
              -e DB_NAME="${{ secrets.DB_NAME }}" \
              -e DB_USER="${{ secrets.DB_USER }}" \
              -e DB_PASS="${{ secrets.DB_PASS }}" \
              -p 8000:8000 \
              devresmgr:${{ github.sha }}
            rm ~/image.tar
          EOF

      - name: Cleanup local artifacts
        run: rm -f image.tar